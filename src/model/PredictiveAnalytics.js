/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2023-02-22
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient.js';

/**
 * The PredictiveAnalytics model module.
 * @module model/PredictiveAnalytics
 * @version 2023-02-22
 */
export class PredictiveAnalytics {
  /**
   * Constructs a new <code>PredictiveAnalytics</code>.
   * @alias module:model/PredictiveAnalytics
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>PredictiveAnalytics</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PredictiveAnalytics} obj Optional instance to populate.
   * @return {module:model/PredictiveAnalytics} The populated <code>PredictiveAnalytics</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PredictiveAnalytics();
      if (data.hasOwnProperty('historic_clv'))
        obj.historicClv = ApiClient.convertToType(data['historic_clv'], 'Number');
      if (data.hasOwnProperty('predicted_clv'))
        obj.predictedClv = ApiClient.convertToType(data['predicted_clv'], 'Number');
      if (data.hasOwnProperty('total_clv'))
        obj.totalClv = ApiClient.convertToType(data['total_clv'], 'Number');
      if (data.hasOwnProperty('historic_number_of_orders'))
        obj.historicNumberOfOrders = ApiClient.convertToType(data['historic_number_of_orders'], 'Number');
      if (data.hasOwnProperty('predicted_number_of_orders'))
        obj.predictedNumberOfOrders = ApiClient.convertToType(data['predicted_number_of_orders'], 'Number');
      if (data.hasOwnProperty('average_days_between_orders'))
        obj.averageDaysBetweenOrders = ApiClient.convertToType(data['average_days_between_orders'], 'Number');
      if (data.hasOwnProperty('average_order_value'))
        obj.averageOrderValue = ApiClient.convertToType(data['average_order_value'], 'Number');
      if (data.hasOwnProperty('churn_probability'))
        obj.churnProbability = ApiClient.convertToType(data['churn_probability'], 'Number');
      if (data.hasOwnProperty('expected_date_of_next_order'))
        obj.expectedDateOfNextOrder = ApiClient.convertToType(data['expected_date_of_next_order'], 'Date');
    }
    return obj;
  }
}

/**
 * Total value of all historically placed orders
 * @member {Number} historicClv
 */
PredictiveAnalytics.prototype.historicClv = undefined;

/**
 * Predicted value of all placed orders in the next 365 days
 * @member {Number} predictedClv
 */
PredictiveAnalytics.prototype.predictedClv = undefined;

/**
 * Sum of historic and predicted CLV
 * @member {Number} totalClv
 */
PredictiveAnalytics.prototype.totalClv = undefined;

/**
 * Number of already placed orders
 * @member {Number} historicNumberOfOrders
 */
PredictiveAnalytics.prototype.historicNumberOfOrders = undefined;

/**
 * Predicted number of placed orders in the next 365 days
 * @member {Number} predictedNumberOfOrders
 */
PredictiveAnalytics.prototype.predictedNumberOfOrders = undefined;

/**
 * Average number of days between orders (None if only one order has been placed)
 * @member {Number} averageDaysBetweenOrders
 */
PredictiveAnalytics.prototype.averageDaysBetweenOrders = undefined;

/**
 * Average value of placed orders
 * @member {Number} averageOrderValue
 */
PredictiveAnalytics.prototype.averageOrderValue = undefined;

/**
 * Probability the customer has churned
 * @member {Number} churnProbability
 */
PredictiveAnalytics.prototype.churnProbability = undefined;

/**
 * Expected date of next order, as calculated at the time of their most recent order
 * @member {Date} expectedDateOfNextOrder
 */
PredictiveAnalytics.prototype.expectedDateOfNextOrder = undefined;

