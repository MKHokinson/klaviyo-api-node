/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2023-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient.js';
import {CatalogVariantCreateJobCreateQueryResourceObject} from './CatalogVariantCreateJobCreateQueryResourceObject.js';

/**
 * The CatalogVariantCreateJobCreateQuery model module.
 * @module model/CatalogVariantCreateJobCreateQuery
 * @version 2023-07-15
 */
export class CatalogVariantCreateJobCreateQuery {
  /**
   * Constructs a new <code>CatalogVariantCreateJobCreateQuery</code>.
   * @alias module:model/CatalogVariantCreateJobCreateQuery
   * @class
   * @param data {module:model/CatalogVariantCreateJobCreateQueryResourceObject} 
   */
  constructor(data) {
    this.data = data;
  }

  /**
   * Constructs a <code>CatalogVariantCreateJobCreateQuery</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CatalogVariantCreateJobCreateQuery} obj Optional instance to populate.
   * @return {module:model/CatalogVariantCreateJobCreateQuery} The populated <code>CatalogVariantCreateJobCreateQuery</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CatalogVariantCreateJobCreateQuery();
      if (data.hasOwnProperty('data'))
        obj.data = CatalogVariantCreateJobCreateQueryResourceObject.constructFromObject(data['data']);
    }
    return obj;
  }
}

/**
 * @member {module:model/CatalogVariantCreateJobCreateQueryResourceObject} data
 */
CatalogVariantCreateJobCreateQuery.prototype.data = undefined;

