"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EmailMarketing = void 0;
var _ApiClient = require("../ApiClient.js");
var _EmailMarketingListSuppression = require("./EmailMarketingListSuppression.js");
var _EmailMarketingSuppression = require("./EmailMarketingSuppression.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /*
                                                                                                                                                                                                                                                                                                                                                                                               * Klaviyo API
                                                                                                                                                                                                                                                                                                                                                                                               * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI spec version: 2023-02-22
                                                                                                                                                                                                                                                                                                                                                                                               * Contact: developers@klaviyo.com
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by the swagger code generator program.
                                                                                                                                                                                                                                                                                                                                                                                               * https://github.com/swagger-api/swagger-codegen.git
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Swagger Codegen version: 3.0.41
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The EmailMarketing model module.
 * @module model/EmailMarketing
 * @version 2023-02-22
 */
var EmailMarketing = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>EmailMarketing</code>.
   * @alias module:model/EmailMarketing
   * @class
   * @param consent {String} The consent status for email marketing.
   * @param method {String} The method by which the profile was subscribed to email marketing.
   */
  function EmailMarketing(consent, method) {
    _classCallCheck(this, EmailMarketing);
    this.consent = consent;
    this.method = method;
  }

  /**
   * Constructs a <code>EmailMarketing</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EmailMarketing} obj Optional instance to populate.
   * @return {module:model/EmailMarketing} The populated <code>EmailMarketing</code> instance.
   */
  _createClass(EmailMarketing, null, [{
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new EmailMarketing();
        if (data.hasOwnProperty('consent')) obj.consent = _ApiClient.ApiClient.convertToType(data['consent'], 'String');
        if (data.hasOwnProperty('timestamp')) obj.timestamp = _ApiClient.ApiClient.convertToType(data['timestamp'], 'Date');
        if (data.hasOwnProperty('method')) obj.method = _ApiClient.ApiClient.convertToType(data['method'], 'String');
        if (data.hasOwnProperty('method_detail')) obj.methodDetail = _ApiClient.ApiClient.convertToType(data['method_detail'], 'String');
        if (data.hasOwnProperty('custom_method_detail')) obj.customMethodDetail = _ApiClient.ApiClient.convertToType(data['custom_method_detail'], 'String');
        if (data.hasOwnProperty('double_optin')) obj.doubleOptin = _ApiClient.ApiClient.convertToType(data['double_optin'], 'Boolean');
        if (data.hasOwnProperty('suppressions')) obj.suppressions = _EmailMarketingSuppression.EmailMarketingSuppression.constructFromObject(data['suppressions']);
        if (data.hasOwnProperty('list_suppressions')) obj.listSuppressions = _EmailMarketingListSuppression.EmailMarketingListSuppression.constructFromObject(data['list_suppressions']);
      }
      return obj;
    }
  }]);
  return EmailMarketing;
}();
/**
 * The consent status for email marketing.
 * @member {String} consent
 */
exports.EmailMarketing = EmailMarketing;
EmailMarketing.prototype.consent = undefined;

/**
 * The timestamp when consent record or updated for email marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).
 * @member {Date} timestamp
 */
EmailMarketing.prototype.timestamp = undefined;

/**
 * The method by which the profile was subscribed to email marketing.
 * @member {String} method
 */
EmailMarketing.prototype.method = undefined;

/**
 * Additional details about the method by which the profile was subscribed to SMS marketing. This may be empty if no details were provided.
 * @member {String} methodDetail
 */
EmailMarketing.prototype.methodDetail = undefined;

/**
 * Additional detail provided by the caller when the profile was subscribed. This may be empty if no details were provided.
 * @member {String} customMethodDetail
 */
EmailMarketing.prototype.customMethodDetail = undefined;

/**
 * Whether the profile was subscribed to email marketing using a double opt-in.
 * @member {Boolean} doubleOptin
 */
EmailMarketing.prototype.doubleOptin = undefined;

/**
 * @member {module:model/EmailMarketingSuppression} suppressions
 */
EmailMarketing.prototype.suppressions = undefined;

/**
 * @member {module:model/EmailMarketingListSuppression} listSuppressions
 */
EmailMarketing.prototype.listSuppressions = undefined;